// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String
  firebaseUid   String?        @unique // Firebase User ID for authentication
  profilePic    String?
  walletAddress String?        // Solana wallet address
  createdAt     DateTime       @default(now())
  challenges    Challenge[]    // Challenges created by this user
  participations Participation[]
}

model Challenge {
  id             String          @id @default(uuid())
  title          String
  description    String
  startDate      DateTime
  endDate        DateTime
  goalType       GoalType
  goalTarget     Int             // e.g., 5000 steps per day
  entryFee       Float           // Amount in USD to join (will be converted to SOL)
  creatorId      String
  creator        User            @relation(fields: [creatorId], references: [id])
  isPublic       Boolean         @default(true)
  participants   Participation[]
  createdAt      DateTime        @default(now())
}

model Participation {
  id          String             @id @default(uuid())
  userId      String
  user        User               @relation(fields: [userId], references: [id])
  challengeId String
  challenge   Challenge          @relation(fields: [challengeId], references: [id])
  hasPaid     Boolean            @default(false)
  hasCompleted Boolean?          // Null until challenge ends
  progress    ProgressRecord[]
  createdAt   DateTime           @default(now())

  @@unique([userId, challengeId])
}

model ProgressRecord {
  id              String         @id @default(uuid())
  participationId String
  participation   Participation  @relation(fields: [participationId], references: [id])
  date            DateTime
  value           Int            // The recorded value (e.g., steps)
  source          DataSource     // Where the data came from
  createdAt       DateTime       @default(now())

  @@unique([participationId, date])
}

enum GoalType {
  STEPS
  WORKOUTS
  MEDITATION
  CUSTOM
}

enum DataSource {
  GOOGLE_FIT
  APPLE_HEALTH
  FITBIT
  MANUAL
}